#summary A technique to load data on-demand.

= Introduction =

This is a ZKGrails port of the program written in http://docs.zkoss.org/wiki/Use_Load-On-Demand_to_Handle_Huge_Data.

= Create a Grails project =

$ `grails create-app ondemand`

= Install ZKGrails =

$ `grails install-plugin zk`

= Create a domain class =

$ `grails create-domain-class employee`

= Adding Properties for Employee

{{{
class Employee {

    String fullname
    String username

    static constraints = {
    }
}

}}}

= Create a zul page =

$ `grails create-zul employee`
This will also create `grails-apps/composers/EmployeeComposer.groovy` for you.

= Edit employee.zul =

{{{
<window apply="${employeeComposer}">

    <vbox>
        <image src="images/grails_logo.jpg"/>
    </vbox>

    <listbox id="lstEmployee" width="100%" checkmark="true">
        <listhead sizable="true">
            <listheader label="ID" sort="auto" />
            <listheader label="Full Name" sort="auto" />
            <listheader label="User Name" sort="auto" />
        </listhead>
  </listbox>
  <paging id="pagEmployee" pageSize="30" />

</window>
}}}

= Edit EmployeeComposer =

{{{
import org.zkoss.zkgrails.*
import org.zkoss.zk.ui.event.*

class EmployeeComposer extends GrailsComposer {

    def lstEmployee
    def pagEmployee

    def afterCompose = { c ->
        pagEmployee.totalSize = Employee.count()
        redraw()
    }

    def onPaging_pagEmployee(ForwardEvent fe) {
        def e = fe.origin
        redraw(e.activePage)
    }

    def redraw(page=0) {
        def list = Employee.list(offset: page * pagEmployee.pageSize,
                                 max: pagEmployee.pageSize)

        lstEmployee.clear()
        lstEmployee.append {
            list.each { e ->
                listitem(value: e) {
                    listcell(label: e.id)
                    listcell(label: e.fullname)
                    listcell(label: e.username)
                }
            }
        }
    }

}
}}}

= Run the application =
$ `grails run-app`
and point your browser to http://localhost:8080/ondemand/employee.zul

